#!/bin/bash -eux

# Test that a successful upgrade will cause a specific file to be
# created in the shared migation-logs directory.

. ./lib.bash
setup_standard

log "Upgrading central..." # see: https://docs.getodk.org/central-upgrade/
git_checkout "$targetVersion"

log "Restricting target volume size to confirm we don't need triple size..."
# TODO this doesn't actually prove that - we'd have to also restrict the original pg volume size too (could we?)
# base requirement:  55 MB
#       extra blob: 250 MB
#            total: 305 MB
exec_in_service_container create-blob.js
cat >>docker-compose.yml <<EOF
    driver: local
    driver_opts:
      device: ./files/postgres-14/volume-postgres_14
      type: tmpfs
      o: "size=305m"
EOF

rebuild_and_restart_containers

confirm_postgres_version 14
confirm_seed_data
confirm_postgres_version 14
confirm_backend_running_ok

# FIXME rename dir to postgres-14-upgrade; remove version numbers from names of things below that
if ! [[ -f ./postgres-upgrade-logs/upgrade-postgres-9.6-14.completed.ok ]]; then
  log "!!!"
  log "!!! Upgrade success flag file not found!"
  log "!!!"
  exit 1
fi

log "Upgrade completed OK!"

# FIXME is this true?  The postgres container logs from upgrade will be clearer when the
# container is recreated below, so we need to dump the logs now to
# avoid losing them.
# TODO these logs may still be preserved in /postgres-upgrade-logs/upgrade-postgres-9.6-14.completed.ok, so for now we dump both to compare
log "---------- postgres container logs ----------"
docker logs central_postgres_1
log "---------------------------------------------"
log "---------- ./postgres-upgrade-logs/upgrade-postgres-9.6-14.completed.ok ----------"
cat ./postgres-upgrade-logs/upgrade-postgres-9.6-14.completed.ok
log "----------------------------------------------------------------------------------"

log "Testing cleanup..."

# FIXME another debug check:
log "Volume count: $(docker volume ls | wc -l)"

# FIXME remove debug
cp ../../../../ls.docker-compose.yml .
log "DEBUG: checking various things..."
docker-compose -f ls.docker-compose.yml up --no-recreate postgres

# FIXME another debug check:
log "Volume count: $(docker volume ls | wc -l)"

log "Creating cleanup flag file..."
sudo touch ./postgres-upgrade-logs/delete-old-postgres9.6-data-on-next-restart

log "Starting cleanup..."
docker-compose up --abort-on-container-exit postgres

# FIXME another debug check:
log "Volume count: $(docker volume ls | wc -l)"

# TODO test that the space was saved, or that the volume has gone
# FIXME remove debug
log "DEBUG: checking various things..."
docker-compose -f ls.docker-compose.yml up postgres

# FIXME another debug check:
log "Volume count: $(docker volume ls | wc -l)"

log "Cleanup completed OK."
